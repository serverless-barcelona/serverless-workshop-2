Resources:
  StreamBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:custom.streamBucket}
      AccessControl: Private
  
  FirehoseRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${self:service}-firehose-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - firehose.amazonaws.com
                - s3.amazonaws.com
                - glue.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Ref FirehosePolicy

  FirehosePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Action:
              - 'firehose:*'
            Resource: '*'
          - Effect: 'Allow'
            Action:
              - 's3:AbortMultipartUpload'
              - 's3:GetBucketLocation'
              - 's3:GetObject'
              - 's3:ListBucket'
              - 's3:ListBucketMultipartUploads'
              - 's3:PutObject'
            Resource:
              - arn:aws:s3:::${self:custom.streamBucket}
              - arn:aws:s3:::${self:custom.streamBucket}/*
          - Effect: 'Allow'
            Action:
              - 'glue:*'
            Resource: '*'

  FirehoseStream:
    Type: 'AWS::KinesisFirehose::DeliveryStream'
    DependsOn:
      - FirehoseRole
      - StreamBucket
      - AthenaTable
    Properties:
      DeliveryStreamName: serverless-workshop
      ExtendedS3DestinationConfiguration:
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 1
        BucketARN: arn:aws:s3:::${self:custom.streamBucket}
        CompressionFormat: UNCOMPRESSED
        # CompressionFormat: Snappy
        # CompressionFormat: GZIP
        Prefix: workshop/year=!{timestamp:yyyy}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/
        ErrorOutputPrefix: workshop-errors/!{firehose:error-output-type}/year=!{timestamp:yyyy}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/
        RoleARN: !GetAtt FirehoseRole.Arn
        DataFormatConversionConfiguration:
          SchemaConfiguration:
            CatalogId: !Ref AWS::AccountId
            RoleARN: !GetAtt FirehoseRole.Arn
            DatabaseName: !Ref AthenaDatabase
            TableName: !Ref AthenaTable
            Region: !Ref AWS::Region
            VersionId: LATEST
          InputFormatConfiguration:
            Deserializer:
              OpenXJsonSerDe:
                ColumnToJsonKeyMappings:
                  ts: timestamp
                  usr: user
          OutputFormatConfiguration:
            Serializer:
              ParquetSerDe:
                Compression: SNAPPY
          Enabled: True